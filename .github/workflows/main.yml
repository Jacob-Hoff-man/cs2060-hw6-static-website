name: Staging release

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  ui-release:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production # Next.js allows development, test, production - no staging!

    permissions: # required by google-github-actions/auth
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'
          cache-dependency-path: 'ui/yarn.lock'
      - run: yarn --frozen-lockfile --production=false # we need dev dependencies for building
      - run: mv .env.staging .env.production # a hack for having staging in NextJS
      - run: yarn run build

      - uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/939144647133/locations/global/workloadIdentityPools/github/providers/my-repo'
          service_account: '881657211299-compute@developer.gserviceaccount.com'

      - uses: 'google-github-actions/setup-gcloud@v1'
      - run: gsutil -m rsync -r -d out gs://agendar-staging











name: Deploy to Google Cloud Storage

on:
  push:
    branches:
    - main  

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specifies the runner environment.

  steps:
  - name: Checkout Repo
    uses: actions/checkout@v2  # Checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
  - name: Authenticate to Google Cloud- name: Authenticate to Google Cloud    
    uses: google-github-actions/auth@v2  # Authenticates to Google Cloud with the Workload Identity Federation.
    with:
      project_id: 'sylvan-client-411600'  # Your Google Cloud project ID.
      workload_identity_provider: 'projects/939144647133/locations/global/workloadIdentityPools/github/providers/my-repo'

  - name: Upload to Google Cloud Storage
    run: |
      gsutil cp ./static-site/. gs:///
